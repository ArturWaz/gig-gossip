{
  "openapi": "3.0.1",
  "info": {
    "title": "GigGossipSettlerAPI",
    "version": "1.0"
  },
  "paths": {
    "/getcapublickey": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Public key of this Certification Authority.",
        "description": "Public key of this Certification Authority that can be used to validate signatures of e.g. issued certificates.",
        "operationId": "GetCaPublicKey",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/iscertificaterevoked": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Is the certificate revoked by this Certification Authority.",
        "description": "Returns true if the certificate has been revoked, false otherwise. Usefull to implement revocation list.",
        "operationId": "IsCertificateRevoked",
        "parameters": [
          {
            "name": "certid",
            "in": "query",
            "description": "Serial number of the certificate.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResult"
                }
              }
            }
          }
        }
      }
    },
    "/gettoken": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Creates authorisation token guid",
        "description": "Creates a new token Guid that is used for further communication with the API",
        "operationId": "GetToken",
        "parameters": [
          {
            "name": "pubkey",
            "in": "query",
            "description": "public key identifies the API user",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidResult"
                }
              }
            }
          }
        }
      }
    },
    "/giveuserproperty": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Grants a property to the subject.",
        "description": "Grants a property to the subject (e.g. driving licence). Only authorised users can grant the property.",
        "operationId": "GiveUserProperty",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication. This is a restricted call and authToken needs to be the token of the authorised user excluding the Subject.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "description": "Public key of the subject.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the property.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Public value of the property.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secret",
            "in": "query",
            "description": "Secret value of the property.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validTill",
            "in": "query",
            "description": "Date and time after which the property will not be valid anymore",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/giveuserfile/{authToken}/{pubkey}/{name}/{validHours}": {
      "post": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "operationId": "GiveUserFile",
        "parameters": [
          {
            "name": "authToken",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validHours",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "secret",
                  "value"
                ],
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "format": "binary"
                  },
                  "secret": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "value": {
                  "style": "form"
                },
                "secret": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/saveusertraceproperty": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Saves a trace to the subject.",
        "description": "Saves a trace, Only authorised users can grant the property.",
        "operationId": "SaveUserTraceProperty",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication. This is a restricted call and authToken needs to be the token of the authorised user excluding the Subject.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "description": "Public key of the subject.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the property.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Public value of the property.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/verifychannel": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Start verification of specific channel.",
        "description": "Starts verification of specific channel.",
        "operationId": "VerifyChannel",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication. This is a restricted call and authToken needs to be the token of the authorised user excluding the Subject.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "description": "Public key of the subject.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Channel name (phone,email,...)",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "query",
            "description": "Method (sms,call,message)",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Value of Channel for the method (phone number, email address).",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/submitchannelsecret": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Submits the secret code for the channel.",
        "description": "Returns -1 if the secret is correct, otherwise the number of retires left is returned.",
        "operationId": "SubmitChannelSecret",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication. This is a restricted call and authToken needs to be the token of the authorised user excluding the Subject.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "description": "Public key of the subject.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Channel name (phone,email,...)",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "query",
            "description": "Method (sms,call,message)",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Value of Channel for the method (phone number, email address).",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secret",
            "in": "query",
            "description": "Secret received from the channel.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32Result"
                }
              }
            }
          }
        }
      }
    },
    "/revokeuserproperty": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "description": "Revokes a property from the subject (e.g. driving licence is taken by the police). Only authorised users can revoke the property.",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication. This is a restricted call and authToken needs to be the token of the authorised user excluding the Subject.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "description": "Public key of the subject.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the property.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/generatereplypaymentpreimage": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Generates new reply payment preimage and returns its hash.",
        "description": "Generates new reply payment preimage for the lightning network HODL invoice. This preimage is secret as long as the gig-job referenced by gigId is not marked as settled. The method returns hash of this preimage.",
        "operationId": "GenerateReplyPaymentPreimage",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gigId",
            "in": "query",
            "description": "gig-job identifier",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repliperPubKey",
            "in": "query",
            "description": "Public key of the replier.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/generaterelatedpreimage": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Generates new payment preimage that is related to the given paymentHash and returns its hash..",
        "description": "Generates new reply payment preimage for the lightning network HODL invoice. Allows implementing payment chains. This preimage is secret as long as the gig-job referenced paymentHash is not marked as settled. The method returns hash of this preimage.",
        "operationId": "GenerateRelatedPreimage",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentHash",
            "in": "query",
            "description": "Payment hash of related HODL invoice.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/validaterelatedpaymenthashes": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Validates if given paymentHashes were generated by the same settler for the same gig.",
        "description": "Validates if given paymentHashes were generated by the same settler for the same gig. Allows implementing payment chains. The method returns true if the condition is met, false otherwise.",
        "operationId": "ValidateRelatedPaymentHashes",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentHash1",
            "in": "query",
            "description": "Payment hash of related HODL invoice.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentHash2",
            "in": "query",
            "description": "Payment hash of related HODL invoice.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResult"
                }
              }
            }
          }
        }
      }
    },
    "/revealpreimage": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Reveals payment preimage of the specific paymentHash",
        "description": "Reveals payment preimage for the settlement of lightning network HODL invoice. This preimage is secret as long as the gig-job referenced paymentHash is not marked as settled.",
        "operationId": "RevealPreimage",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentHash",
            "in": "query",
            "description": "Payment hash of related HODL invoice.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/getgigstatus": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Gets status of the Gig and reveals symmetric key if available, that customer can use to decrypt the message from gig-worker.",
        "description": "Gets status of the Gig and reveals symmetric key if available, that customer can use to decrypt the message from gig-worker. This key is secret as long as the gig-job is not marked as accepted.",
        "operationId": "GetGigStatus",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signedRequestPayloadId",
            "in": "query",
            "description": "Request Payload Id.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repliperCertificateId",
            "in": "query",
            "description": "Replier.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/generaterequestpayload": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Genertes RequestPayload for the specific topic.",
        "description": "Genertes RequestPayload for the specific topic.",
        "operationId": "GenerateRequestPayload",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "properties",
            "in": "query",
            "description": "Requested properties of the sender.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "serialisedTopic",
            "in": "query",
            "description": "Topic",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/generatesettlementtrust": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Genertes Settlement Trust used by the gig-worker to estabilish trusted primise with the custmer.",
        "description": "Genertes Settlement Trust used by the gig-worker to estabilish trusted primise with the custmer.",
        "operationId": "GenerateSettlementTrust",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "properties",
            "in": "query",
            "description": "Requested properties of the replier.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "Message to be encrypted",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replyinvoice",
            "in": "query",
            "description": "Invoice for the job.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signedRequestPayloadSerialized",
            "in": "query",
            "description": "Request payload",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/encryptobjectforcertificateid": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Encrypts the object using public key related to the specific certioficate id.",
        "description": "Encrypts the object using public key related to the specific certioficate id.",
        "operationId": "EncryptObjectForCertificateId",
        "parameters": [
          {
            "name": "certificateId",
            "in": "query",
            "description": "Certificate ID",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectSerialized",
            "in": "query",
            "description": "Serialized Object",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/managedispute": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Allows opening and closing disputes.",
        "description": "Allows opening and closing disputes. After opening, the dispute needs to be solved positively before the HODL invoice timeouts occure. Otherwise all the invoices and payments will be cancelled.",
        "operationId": "ManageDispute",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication. This is a restricted call and authToken needs to be the token of the authorised user.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gigId",
            "in": "query",
            "description": "Gig-job identifier.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repliperCertificateId",
            "in": "query",
            "description": "CertificateId of the replier.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open",
            "in": "query",
            "description": "True to open/False to close dispute.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/cancelgig": {
      "get": {
        "tags": [
          "GigGossipSettlerAPI"
        ],
        "summary": "Cancels existing gig",
        "description": "Allows opening and closing disputes. After opening, the dispute needs to be solved positively before the HODL invoice timeouts occure. Otherwise all the invoices and payments will be cancelled.",
        "operationId": "CancelGig",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication. This is a restricted call and authToken needs to be the token of the authorised user.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gigId",
            "in": "query",
            "description": "Gig-job identifier.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repliperCertificateId",
            "in": "query",
            "description": "CertificateId of the replier.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/api/getcapublickey": {
      "get": {
        "tags": [
          "Settler"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/iscertificaterevoked": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "certid",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/gettoken": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "pubkey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/api/giveuserproperty": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secret",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validTill",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/verifychannel": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/submitchannelsecret": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secret",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/revokeuserproperty": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/generatereplypaymentpreimage": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gigId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "repliperPubKey",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/generaterelatedpreimage": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentHash",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/validaterelatedpaymenthashes": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentHash1",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentHash2",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/revealpreimage": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentHash",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/revealsymmetrickey": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signedRequestPayloadId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "repliperCertificateId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/generaterequestpayload": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serialisedTopic",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/generatesettlementtrust": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replyinvoice",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signedRequestPayloadSerialized",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/encryptobjectforcertificateid": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "certificateId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "objectSerialized",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/managedispute": {
      "get": {
        "tags": [
          "Settler"
        ],
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gigId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "repliperCertificateId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "open",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BooleanResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          },
          "errorCode": {
            "$ref": "#/components/schemas/SettlerErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GuidResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          },
          "errorCode": {
            "$ref": "#/components/schemas/SettlerErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Int32Result": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "errorCode": {
            "$ref": "#/components/schemas/SettlerErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Result": {
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/SettlerErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SettlerErrorCode": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "StringResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "$ref": "#/components/schemas/SettlerErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}