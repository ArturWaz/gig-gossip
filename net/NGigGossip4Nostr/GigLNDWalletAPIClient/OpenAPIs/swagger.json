{
  "openapi": "3.0.1",
  "info": {
    "title": "GigLNDWalletAPI",
    "version": "1.0"
  },
  "paths": {
    "/gettoken": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Creates authorisation token guid",
        "description": "Creates a new token Guid that is used for further communication with the API",
        "operationId": "GetToken",
        "parameters": [
          {
            "name": "pubkey",
            "in": "query",
            "description": "public key identifies the API user",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/getbalance": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Balance of the account",
        "description": "Returns the account balance in Satoshis",
        "operationId": "GetBalance",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "authorisation token for the communication",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/newaddress": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "New topup Bitcoin address",
        "description": "Creates a new Bitcoin address that can be used to top-up this lightning network account",
        "operationId": "NewAddress",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "authorisation token for the communication",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/registerpayout": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Register for payout to Chain",
        "description": "Creates new request for payout from wallet to the chain",
        "operationId": "RegisterPayout",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "authorisation token for the communication",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "satoshis",
            "in": "query",
            "description": "amount in satoshis",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "btcAddress",
            "in": "query",
            "description": "bitcoin address",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "txfee",
            "in": "query",
            "description": "transaction fee",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/addinvoice": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Creates a new lightning network invoice",
        "description": "Creates a new lightning network invoice",
        "operationId": "AddInvoice",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "satoshis",
            "in": "query",
            "description": "The value of this invoice in satoshis.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "memo",
            "in": "query",
            "description": "An optional memo to attach along with the invoice. Used for record keeping purposes for the invoice's creator, and will also be set in the description field of the encoded payment request if the description_hash field is not being used.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expiry",
            "in": "query",
            "description": "Payment request expiry time in seconds.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRet"
                }
              }
            }
          }
        }
      }
    },
    "/addhodlinvoice": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Creates a new lightning network HODL invoice",
        "description": "Creates a new lightning network HODL invoice",
        "operationId": "AddHodlInvoice",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "satoshis",
            "in": "query",
            "description": "The value of this invoice in satoshis.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "hash",
            "in": "query",
            "description": "The hash of the preimage.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memo",
            "in": "query",
            "description": "An optional memo to attach along with the invoice. Used for record keeping purposes for the invoice's creator, and will also be set in the description field of the encoded payment request if the description_hash field is not being used.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expiry",
            "in": "query",
            "description": "Payment request expiry time in seconds.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRet"
                }
              }
            }
          }
        }
      }
    },
    "/decodeinvoice": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Decodes the given payment request and returns its details",
        "description": "Takes an encoded payment request string and attempts to decode it, returning a full description of the conditions encoded within the payment request.",
        "operationId": "DecodeInvoice",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentRequest",
            "in": "query",
            "description": "The payment request string to be decoded.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayReq"
                }
              }
            }
          }
        }
      }
    },
    "/sendpayment": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Sends a payment via lightning network for the given payment request",
        "description": "SendPayment attempts to route a payment described by the passed paymentrequest to the final destination.",
        "operationId": "SendPayment",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentrequest",
            "in": "query",
            "description": "A bare-bones invoice for a payment within the Lightning Network. With the details of the invoice, the sender has all the data necessary to send a payment to the recipient.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "An upper limit on the amount of time we should spend when attempting to fulfill the payment. This is expressed in seconds.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/settleinvoice": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "SettleInvoice settles an accepted invoice.",
        "description": "Settles hodl invoice that is identified by the payment hash deliverd from the given preimage.",
        "operationId": "SettleInvoice",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preimage",
            "in": "query",
            "description": "Externally discovered pre-image that should be used to settle the hold invoice.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cancelinvoice": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Cancels the invoice identified by the given payment hash",
        "description": "CancelInvoice cancels a currently open invoice. If the invoice is already canceled, this call will succeed. If the invoice is already settled, it will fail.",
        "operationId": "CancelInvoice",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymenthash",
            "in": "query",
            "description": "Hash corresponding to the invoice to cancel.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/getinvoicestate": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Returns a state of the invoice identified by the given payment hash",
        "description": "Returns a state of the invoice identified by the given payment hash",
        "operationId": "GetInvoiceState",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymenthash",
            "in": "query",
            "description": "Hash corresponding to the invoice.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/getpaymentstatus": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Returns a status of the payment identified by the given payment hash",
        "description": "Returns a status of the payment identified by the given payment hash",
        "operationId": "GetPaymentStatus",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymenthash",
            "in": "query",
            "description": "Hash corresponding to the payment.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Feature": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "isKnown": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HopHint": {
        "type": "object",
        "properties": {
          "nodeId": {
            "type": "string",
            "nullable": true
          },
          "chanId": {
            "type": "integer",
            "format": "int64"
          },
          "feeBaseMsat": {
            "type": "integer",
            "format": "int32"
          },
          "feeProportionalMillionths": {
            "type": "integer",
            "format": "int32"
          },
          "cltvExpiryDelta": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InvoiceRet": {
        "type": "object",
        "properties": {
          "paymentRequest": {
            "type": "string",
            "nullable": true
          },
          "paymentHash": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayReq": {
        "type": "object",
        "properties": {
          "destination": {
            "type": "string",
            "nullable": true
          },
          "paymentHash": {
            "type": "string",
            "nullable": true
          },
          "numSatoshis": {
            "type": "integer",
            "format": "int64"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "expiry": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHash": {
            "type": "string",
            "nullable": true
          },
          "fallbackAddr": {
            "type": "string",
            "nullable": true
          },
          "cltvExpiry": {
            "type": "integer",
            "format": "int64"
          },
          "routeHints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteHint"
            },
            "nullable": true,
            "readOnly": true
          },
          "paymentAddr": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "numMsat": {
            "type": "integer",
            "format": "int64"
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Feature"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RouteHint": {
        "type": "object",
        "properties": {
          "hopHints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HopHint"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}